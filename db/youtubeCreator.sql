-- MySQL Script generated by MySQL Workbench
-- Fri Sep  7 20:40:42 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS youtubecreatordb ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS youtubecreatordb DEFAULT CHARACTER SET utf8 ;
USE youtubecreatordb ;

-- -----------------------------------------------------
-- Table `mydb`.`Lyric`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS youtubecreatordb.`Lyric` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Lyric_1st` MEDIUMBLOB NULL,
  `Lyric_2nd` MEDIUMBLOB NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON youtubecreatordb.`Lyric` (`id` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Title`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS youtubecreatordb.`Title` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `TitleFile` MEDIUMBLOB NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON youtubecreatordb.`Title` (`id` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Song`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS youtubecreatordb.`Song` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `SongName` VARCHAR(45) NULL,
  `Lyric_id` INT NOT NULL,
  `Title_id` INT NOT NULL,
  `SongFile` MEDIUMBLOB NULL,
  PRIMARY KEY (`id`, `Title_id`),
  CONSTRAINT `fk_Song_Lyric`
    FOREIGN KEY (`Lyric_id`)
    REFERENCES youtubecreatordb.`Lyric` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Song_Title1`
    FOREIGN KEY (`Title_id`)
    REFERENCES youtubecreatordb.`Title` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Song_Lyric_idx` ON youtubecreatordb.`Song` (`Lyric_id` ASC);

CREATE INDEX `fk_Song_Title1_idx` ON youtubecreatordb.`Song` (`Title_id` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`ScreenTemplate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS youtubecreatordb.`ScreenTemplate` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Title_pos` BINARY(16) NULL,
  `Sub1st_pos` BINARY(16) NULL,
  `Sub1sh_color` INT NULL,
  `Sub2nd_pos` BINARY(16) NULL,
  `Sub2nd_color` INT NULL,
  `FontName` VARCHAR(45) NULL,
  `FontSize` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON youtubecreatordb.`ScreenTemplate` (`id` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Affect`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS youtubecreatordb.`Affect` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `AffectFile` LONGBLOB NULL,
  `Opacity` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON youtubecreatordb.`Affect` (`id` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Screen`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS youtubecreatordb.`Screen` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ScreenFile` LONGBLOB NULL,
  `Affect_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Affect_id`),
  CONSTRAINT `fk_Screen_Affect1`
    FOREIGN KEY (`Affect_id`)
    REFERENCES youtubecreatordb.`Affect` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Screen_Affect1_idx` ON youtubecreatordb.`Screen` (`Affect_id` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`ScreenConfiguration`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS youtubecreatordb.`ScreenConfiguration` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ScreenTemplate_id` INT NOT NULL,
  `Screen_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_ScreenConfiguration_ScreenTemplate1`
    FOREIGN KEY (`ScreenTemplate_id`)
    REFERENCES youtubecreatordb.`ScreenTemplate` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ScreenConfiguration_Screen1`
    FOREIGN KEY (`Screen_id`)
    REFERENCES youtubecreatordb.`Screen` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_ScreenConfiguration_ScreenTemplate1_idx` ON youtubecreatordb.`ScreenConfiguration` (`ScreenTemplate_id` ASC);

CREATE INDEX `fk_ScreenConfiguration_Screen1_idx` ON youtubecreatordb.`ScreenConfiguration` (`Screen_id` ASC);

CREATE UNIQUE INDEX `id_UNIQUE` ON youtubecreatordb.`ScreenConfiguration` (`id` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`YoutubeMV`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS youtubecreatordb.`YoutubeMV` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ScreenConfiguration_id` INT NOT NULL,
  `Song_id` INT NOT NULL,
  `Song_Title_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_YoutubeMV_ScreenConfiguration1`
    FOREIGN KEY (`ScreenConfiguration_id`)
    REFERENCES youtubecreatordb.`ScreenConfiguration` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_YoutubeMV_Song1`
    FOREIGN KEY (`Song_id` , `Song_Title_id`)
    REFERENCES youtubecreatordb.`Song` (`id` , `Title_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_YoutubeMV_ScreenConfiguration1_idx` ON youtubecreatordb.`YoutubeMV` (`ScreenConfiguration_id` ASC);

CREATE INDEX `fk_YoutubeMV_Song1_idx` ON youtubecreatordb.`YoutubeMV` (`Song_id` ASC, `Song_Title_id` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

