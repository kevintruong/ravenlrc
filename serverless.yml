service: rav-render # NOTE: Don't put the word "google" in here

provider:
  name: google
  stage: dev
  runtime: python37
  region: us-central1
  project: ytcreator
  memorySize: 2048
  timeout: 500s
  # The GCF credentials can be a little tricky to set up. Luckily we've documented this for you here:
  # https://serverless.com/framework/docs/providers/google/guide/credentials/
  #
  # the path to the credentials file needs to be absolute
  credentials: ~/.gcloud/keyfile.json

plugins:
  - serverless-google-cloudfunctions

# needs more granular excluding in production as only the serverless provider npm
# package should be excluded (and not the whole node_modules directory)
package:
  exclude:
    - heroku/**
    - venv_37/**
    - venv/**
    - log/**
    - docker/**
    - .idea/**
    - subeffect/venv/**
    - subeffect/test/**
    - crawler/db/**.db
    - backend/tests/**
    - backend/vendor/lyriceffect/**
    - backend/subeffect/test/**
    - ffmpeg/**
    - backend/**/test/**
    - Docs/**
    - songcrawlers/
    - Docs/
    - docker/
    - backend/tests
    - crawler/**/*.db
    - songcrawlers/venv
    - subeffect/venv
    - .serverless
    - node_modules/**
    - .gitignore
    - .git/**
    - heroku/**
    - venv_37/**
    - log/**
    - docker/**
    - .idea/**
    - test/**
    - backend/tests/**
    - backend/subeffect/test/**
    - songcrawlers/**
    - crawler/song.txt
    - FilmMaker/**
    - crawler/test/**
    - backend/**/test/**
    - Docs/**
    - venv/**

functions:
  songcrawler:
    handler: songcrawler
    events:
      - http: path
    environment:
      DEPLOY_ENV: GOOGLE
  render:
    handler: render
    events:
      - http: path
    environment:
      DEPLOY_ENV: GOOGLE
  publish:
    handler: publish
    events:
      - http: path
    environment:
      DEPLOY_ENV: GOOGLE
  getbgeffect:
    handler: bgeffect
    events:
      - http: path
    environment:
      DEPLOY_ENV: GOOGLE
  colorscheme:
    handler: colorscheme
    events:
      - http: path
    environment:
      DEPLOY_ENV: GOOGLE

  # NOTE: the following uses an "event" event (pubSub event in this case).
  # Please create the corresponding resources in the Google Cloud
  # before deploying this service through Serverless
  #second:
  #  handler: event
  #  events:
  #    - event:
  #        eventType: providers/cloud.pubsub/eventTypes/topic.publish
  #        resource: projects/*/topics/my-topic

# you can define resources, templates etc. the same way you would in a
# Google Cloud deployment configuration
#resources:
#  resources:
#    - type: storage.v1.bucket
#      name: my-serverless-service-bucket
#  imports:
#    - path: my_template.jinja
